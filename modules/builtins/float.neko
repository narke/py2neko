var functions	= $loader.loadmodule("functions",$loader);
var bool		= $loader.loadmodule("bool",$loader);

var float = $new(null);

var float_create = function()
{
    var o = $new(null);
    
    o.imag = 0;
    o.real = 0;
    o.type = 13;
    
    $objsetproto(o, float);
    
    return o;
}

float.__abs__ = function()
{
	o = float_create();

    o.real = this.real;

    if (this.real < 0)
    {
        o.real = 0 - this.real;
        return o;
    }

    return o;
}

float.__add__ = function(y)
{
	var o = float_create();

    o.real = this.real + y.real;

    return o;
}

float.__bool__ = function()
{
	var o = bool.__new__(0);
	
	if (this.real != 0 )
	{
		o.numerator = 1;
	}
	else
	{
		o.numerator = 0;
	}
	
	retutn o;
}

float.__divmod__ = function(y)
{
	// TODO
}

float.__eq__ = function(y)
{
	return this.real == y.real;
}

float.__float__ = function(obj)
{
	// TODO
}

float.__floordiv__ = function(y)
{
	var o = float_create();

    o.real = (this.real / y.real) - ((this.real / y.real) % 1);

    return o;
}

float.__format__ = function()
{
	//TODO
}

float.__ge__ = function(y)
{
	return (this.real >= y.real);
}

float.__getattribute__ = function()
{
	//TODO
}

float.__getnewargs__ = function()
{
	//TODO
}

float.__gt__ = function(y)
{
	return this.real > y.real;
}

float.__hash__ = function()
{
	// TODO
}

float.__int__ = function()
{
	return functions.int(this.real);
}

float.__le__ = function(y)
{
	return this.real <= y.real;
}

float.__lt__ = function(y)
{
	return this.real < y.real;
}

float.__mod__ = function(y)
{
	o = float_create();
    
    o.real = this.real % y.real;

    return o;
}

float.__mul__ = function(y)
{
	o = float_create();
    
    o.real = this.real * y.real;

    return o;
}

float.__ne__ = function(y)
{
	return this.numerator != y.real;
}

float.__neg__ = function()
{
	o = float_create();
    
    o.real = 0 - this.real;

    return o;
}

float.__pos__ = function()
{
	o = float_create();
    
    o.real = 0 + this.real;

    return o;
}

float.__pow__ = function(y)
{
	i = float_create();
	i.real = 0;
	
    var result = this.real;

    while (i.real < y.real - 1)
    {
        result = result * this.real;
        i.real = i.real + 1;
    }
    
    return i;
}

float.__radd__ = function(y)
{
	o = float_create();
    
    o.real = y.real + this.real;

    return o;
}

float.__rdivmod__ = function(y)
{
	// TODO
}

float.__repr__ = function()
{
	//TODO
}

float.__rfloordiv__ = function(y)
{
	// TODO
}

float.__rmod__ = function(y)
{
	o = float_create();
    
    o.real = y.real % this.real;

    return o;
}

float.__rmul__ = function(y)
{
	o = float_create();
    
    o.real = y.real * this.real;

    return o;
}

float.__round__ = function()
{
	// TODO
}

float.__rpow__ = function(y)
{
	// TODO
}

float.__rsub__ = function(y)
{
	o = float_create();
    
    o.real = y.real - this.real;

    return o;
}

float.__rtruediv__ = function(y)
{
	o = float_create();
    
    o.real = y.real / this.real;

    return o;
}

float.__str__ = function(y)
{
	return functions.str(this.real);
}

float.__sub__ = function(y)
{
	o = float_create();
    
    o.real =  this.real - y.real;

    return o;
}

float.__truediv__ = function(y)
{
	o = float_create();
    
    o.real =  this.real / y.real;

    return o;
}

float.__trunc__ = function()
{
	// TODO
}

float.as_integer_ratio = function()
{
	//TODO
}

float.conjugate = function()
{
	//TODO
}

float.hex = function()
{
	//TODO
}

float.is_integer = function()
{
	//TODO
}


// Data and other attributes defined here

float.fromhex = function()
{
	//TODO
}


$exports.float = float;
